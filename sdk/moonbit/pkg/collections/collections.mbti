package gmlewis/modus/pkg/collections

alias @moonbitlang/core/json as @json

// Values
fn compute_distance(String, String, String, String, Array[NamespaceOption]) -> CollectionSearchResultObject!

fn get_labels(String, String, Array[NamespaceOption]) -> Array[String]!

fn get_namespaces(String) -> Array[String]!

fn get_text(String, String, Array[NamespaceOption]) -> String!

fn get_texts(String, Array[NamespaceOption]) -> Map[String, String]!

fn get_vector(String, String, String, Array[NamespaceOption]) -> FixedArray[Float]!

fn host_classify_text(String, String, String, String) -> CollectionClassificationResult?

fn host_compute_distance(String, String, String, String, String) -> CollectionSearchResultObject?

fn host_delete(String, String, String) -> CollectionMutationResult?

fn host_dump_texts(String, String) -> String

fn host_get_labels(String, String, String) -> Array[String]?

fn host_get_namespaces(String) -> Array[String]?

fn host_get_text(String, String, String) -> String?

fn host_get_vector(String, String, String, String) -> FixedArray[Float]?

fn host_recompute_index(String, String, String) -> SearchMethodMutationResult?

fn host_search(String, Array[String], String, String, Int, Bool) -> CollectionSearchResult?

fn host_search_by_vector(String, Array[String], String, FixedArray[Float], Int, Bool) -> CollectionSearchResult?

fn host_upsert(String, String, Array[String], Array[String], Array[Array[String]]) -> CollectionMutationResult?

fn nn_classify(String, String, String, Array[NamespaceOption]) -> CollectionClassificationResult!

fn recompute_search_method(String, String, Array[NamespaceOption]) -> SearchMethodMutationResult!

fn remove(String, String, Array[NamespaceOption]) -> CollectionMutationResult!

fn search(String, String, String, Array[SearchOption]) -> CollectionSearchResult!

fn search_by_vector(String, String, FixedArray[Float], Array[SearchOption]) -> CollectionSearchResult!

fn upsert(String, String, String, Array[String], Array[NamespaceOption]) -> CollectionMutationResult!

fn upsert_batch(String, Array[String], Array[String], Array[Array[String]], Array[NamespaceOption]) -> CollectionMutationResult!

fn with_limit(Int) -> SearchOption

fn with_namespace(String) -> NamespaceOption

fn with_namespaces(Array[String]) -> SearchOption

fn with_return_text(Bool) -> SearchOption

// Types and methods
pub(all) struct CollectionClassificationLabelObject {
  label : String
  confidence : Double
}
impl Eq for CollectionClassificationLabelObject
impl Show for CollectionClassificationLabelObject
impl ToJson for CollectionClassificationLabelObject
impl @json.FromJson for CollectionClassificationLabelObject

pub(all) struct CollectionClassificationResult {
  collection : String
  status : String
  error : String
  search_method : String
  labels_result : Array[CollectionClassificationLabelObject]
  cluster : Array[CollectionClassificationResultObject]
}
impl Eq for CollectionClassificationResult
impl Show for CollectionClassificationResult
impl ToJson for CollectionClassificationResult
impl @json.FromJson for CollectionClassificationResult

pub(all) struct CollectionClassificationResultObject {
  key : String
  labels : Array[String]
  distance : Double
  score : Double
}
impl Eq for CollectionClassificationResultObject
impl Show for CollectionClassificationResultObject
impl ToJson for CollectionClassificationResultObject
impl @json.FromJson for CollectionClassificationResultObject

pub(all) type! CollectionError String
impl Eq for CollectionError
impl Show for CollectionError

pub(all) struct CollectionMutationResult {
  collection : String
  status : CollectionStatus
  error : String
  operation : String
  keys : Array[String]
}
impl Eq for CollectionMutationResult
impl Show for CollectionMutationResult
impl ToJson for CollectionMutationResult
impl @json.FromJson for CollectionMutationResult

pub(all) struct CollectionSearchResult {
  collection : String
  status : CollectionStatus
  error : String
  search_method : String
  objects : Array[CollectionSearchResultObject]
}
impl Eq for CollectionSearchResult
impl Show for CollectionSearchResult
impl ToJson for CollectionSearchResult
impl @json.FromJson for CollectionSearchResult

pub(all) struct CollectionSearchResultObject {
  namespace : String
  key : String
  text : String
  labels : Array[String]
  distance : Double
  score : Double
}
impl Eq for CollectionSearchResultObject
impl Show for CollectionSearchResultObject
impl ToJson for CollectionSearchResultObject
impl @json.FromJson for CollectionSearchResultObject

pub(all) enum CollectionStatus {
  Success
  Error
}
impl Eq for CollectionStatus
impl Show for CollectionStatus
impl ToJson for CollectionStatus
impl @json.FromJson for CollectionStatus

pub type NamespaceOption (NamespaceOptions) -> Unit

pub(all) struct NamespaceOptions {
  namespace : String
}

pub(all) struct SearchMethodMutationResult {
  collection : String
  status : CollectionStatus
  error : String
  operation : String
  search_method : String
}
impl Eq for SearchMethodMutationResult
impl Show for SearchMethodMutationResult
impl ToJson for SearchMethodMutationResult
impl @json.FromJson for SearchMethodMutationResult

pub(all) type SearchOption (SearchOptions) -> Unit

pub(all) struct SearchOptions {
  namespaces : Array[String]
  limit : Int
  return_text : Bool
}

// Type aliases

// Traits


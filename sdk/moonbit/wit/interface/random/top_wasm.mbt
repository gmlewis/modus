// Generated by `wit-bindgen` 0.36.0. DO NOT EDIT!
///| Read random bytes into the provided buffer
/// Returns number of bytes read
pub fn read(buf : FixedArray[Byte]) -> Result[UInt, String] {
  let return_area = @ffi.malloc(12)
  wasmImportRead(@ffi.bytes2ptr(buf), buf.length(), return_area)
  let lifted = match @ffi.load8_u(return_area + 0) {
    0 => Result::Ok(@ffi.load32(return_area + 4).reinterpret_as_uint())
    1 => {
      ignore(@ffi.load32(return_area + 8))
      let result = @ffi.ptr2str(@ffi.load32(return_area + 4))
      Result::Err(result)
    }
    _ => panic()
  }
  ignore(buf)
  @ffi.free(return_area)
  lifted
}

// Generated by `wit-bindgen` 0.36.0. DO NOT EDIT!
///| Model information record
pub(all) struct ModelInfo {
  name : String
  full_name : String
} derive(Show, Eq)

///| Get information about a specific model
pub fn get_model_info(model_name : String) -> ModelInfo? {
  let return_area = @ffi.malloc(20)
  wasmImportGetModelInfo(
    @ffi.str2ptr(model_name),
    model_name.iter().count(),
    return_area,
  )
  let lifted : ModelInfo? = match @ffi.load8_u(return_area + 0) {
    0 => Option::None
    1 => {
      ignore(@ffi.load32(return_area + 8))
      let result = @ffi.ptr2str(@ffi.load32(return_area + 4))
      ignore(@ffi.load32(return_area + 16))
      let result2 = @ffi.ptr2str(@ffi.load32(return_area + 12))
      Option::Some(ModelInfo::{ name: result, full_name: result2 })
    }
    _ => panic()
  }
  ignore(model_name)
  @ffi.free(return_area)
  return lifted
}

///| Invoke a model with JSON-serialized input
pub fn invoke_model(model_name : String, input : String) -> String? {
  let return_area = @ffi.malloc(12)
  wasmImportInvokeModel(
    @ffi.str2ptr(model_name),
    model_name.iter().count(),
    @ffi.str2ptr(input),
    input.iter().count(),
    return_area,
  )
  let lifted : String? = match @ffi.load8_u(return_area + 0) {
    0 => Option::None
    1 => {
      ignore(@ffi.load32(return_area + 8))
      let result = @ffi.ptr2str(@ffi.load32(return_area + 4))
      Option::Some(result)
    }
    _ => panic()
  }
  ignore(model_name)
  ignore(input)
  @ffi.free(return_area)
  return lifted
}

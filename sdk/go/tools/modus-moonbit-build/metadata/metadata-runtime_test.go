// -*- compile-command: "go test -run ^TestFunction_String_Runtime$ ."; -*-

/*
 * Copyright 2024 Hypermode Inc.
 * Licensed under the terms of the Apache License, Version 2.0
 * See the LICENSE file that accompanied this code for further details.
 *
 * SPDX-FileCopyrightText: 2024 Hypermode Inc. <hello@hypermode.com>
 * SPDX-License-Identifier: Apache-2.0
 */

package metadata

import (
	_ "embed"
	"testing"
)

//go:embed testdata/runtime-testdata-metadata.json
var runtimeTestdataMetadataJSON []byte

func TestFunction_String_Runtime(t *testing.T) {
	t.Parallel()

	tests := []functionStringTest{
		{name: "add", want: "(a : Int, b : Int) -> Int"},
		{name: "call_test_time_option_input_none", want: "() -> @time.ZonedDateTime?"},
		{name: "call_test_time_option_input_some", want: "() -> @time.ZonedDateTime?"},
		{name: "echo1", want: "(message : String) -> String"},
		{name: "echo2", want: "(message : String?) -> String"},
		{name: "echo3", want: "(message : String) -> String?"},
		{name: "echo4", want: "(message : String?) -> String?"},
		{name: "encode_strings1", want: "(items : Array[String]?) -> String?"},
		{name: "encode_strings2", want: "(items : Array[String?]?) -> String?"},
		{name: "get_int_option_fixedarray1", want: "() -> FixedArray[Int?]"},
		{name: "get_int_ptr_array2", want: "() -> FixedArray[Int?]"},
		{name: "get_map_array2", want: "() -> FixedArray[Map[String, String]]"},
		{name: "get_map_ptr_array2", want: "() -> FixedArray[Map[String, String]?]"},
		{name: "get_option_int_fixedarray1", want: "() -> FixedArray[Int]?"},
		{name: "get_option_int_fixedarray2", want: "() -> FixedArray[Int]?"},
		{name: "get_option_string_fixedarray1", want: "() -> FixedArray[String]?"},
		{name: "get_option_string_fixedarray2", want: "() -> FixedArray[String]?"},
		{name: "get_string_option_array2", want: "() -> FixedArray[String?]"},
		{name: "get_string_option_fixedarray1", want: "() -> FixedArray[String?]"},
		{name: "host_echo1", want: "(message : String) -> String"},
		{name: "host_echo2", want: "(message : String?) -> String"},
		{name: "host_echo3", want: "(message : String) -> String?"},
		{name: "host_echo4", want: "(message : String?) -> String?"},
		{name: "test2d_array_input_string", want: "(val : Array[Array[String]]) -> Unit!Error"},
		{name: "test2d_array_input_string_empty", want: "(val : Array[Array[String]]) -> Unit!Error"},
		{name: "test2d_array_input_string_inner_empty", want: "(val : Array[Array[String]]) -> Unit!Error"},
		{name: "test2d_array_input_string_inner_none", want: "(val : Array[Array[String]?]) -> Unit!Error"},
		{name: "test2d_array_input_string_none", want: "(val : Array[Array[String]]?) -> Unit!Error"},
		{name: "test2d_array_output_string", want: "() -> Array[Array[String]]"},
		{name: "test2d_array_output_string_empty", want: "() -> Array[Array[String]]"},
		{name: "test2d_array_output_string_inner_empty", want: "() -> Array[Array[String]]"},
		{name: "test2d_array_output_string_inner_none", want: "() -> Array[Array[String]?]"},
		{name: "test2d_array_output_string_none", want: "() -> Array[Array[String]]?"},
		{name: "test_array_input_bool_0", want: "(val : Array[Bool]) -> Unit!Error"},
		{name: "test_array_input_bool_1", want: "(val : Array[Bool]) -> Unit!Error"},
		{name: "test_array_input_bool_2", want: "(val : Array[Bool]) -> Unit!Error"},
		{name: "test_array_input_bool_3", want: "(val : Array[Bool]) -> Unit!Error"},
		{name: "test_array_input_bool_4", want: "(val : Array[Bool]) -> Unit!Error"},
		{name: "test_array_input_bool_option_0", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_1_false", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_1_none", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_1_true", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_2", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_3", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_bool_option_4", want: "(val : Array[Bool?]) -> Unit!Error"},
		{name: "test_array_input_byte_0", want: "(val : Array[Byte]) -> Unit!Error"},
		{name: "test_array_input_byte_1", want: "(val : Array[Byte]) -> Unit!Error"},
		{name: "test_array_input_byte_2", want: "(val : Array[Byte]) -> Unit!Error"},
		{name: "test_array_input_byte_3", want: "(val : Array[Byte]) -> Unit!Error"},
		{name: "test_array_input_byte_4", want: "(val : Array[Byte]) -> Unit!Error"},
		{name: "test_array_input_byte_option_0", want: "(val : Array[Byte?]) -> Unit!Error"},
		{name: "test_array_input_byte_option_1", want: "(val : Array[Byte?]) -> Unit!Error"},
		{name: "test_array_input_byte_option_2", want: "(val : Array[Byte?]) -> Unit!Error"},
		{name: "test_array_input_byte_option_3", want: "(val : Array[Byte?]) -> Unit!Error"},
		{name: "test_array_input_byte_option_4", want: "(val : Array[Byte?]) -> Unit!Error"},
		{name: "test_array_input_char_empty", want: "(val : Array[Char]) -> Unit!Error"},
		{name: "test_array_input_char_option", want: "(val : Array[Char?]) -> Unit!Error"},
		{name: "test_array_input_double_empty", want: "(val : Array[Double]) -> Unit!Error"},
		{name: "test_array_input_double_option", want: "(val : Array[Double?]) -> Unit!Error"},
		{name: "test_array_input_float_empty", want: "(val : Array[Float]) -> Unit!Error"},
		{name: "test_array_input_float_option", want: "(val : Array[Float?]) -> Unit!Error"},
		{name: "test_array_input_int16_empty", want: "(val : Array[Int16]) -> Unit!Error"},
		{name: "test_array_input_int16_option", want: "(val : Array[Int16?]) -> Unit!Error"},
		{name: "test_array_input_int_empty", want: "(val : Array[Int]) -> Unit!Error"},
		{name: "test_array_input_int_option", want: "(val : Array[Int?]) -> Unit!Error"},
		{name: "test_array_input_string", want: "(val : Array[String]) -> Unit!Error"},
		{name: "test_array_input_string_empty", want: "(val : Array[String]) -> Unit!Error"},
		{name: "test_array_input_string_none", want: "(val : Array[String]?) -> Unit!Error"},
		{name: "test_array_input_string_option", want: "(val : Array[String?]) -> Unit!Error"},
		{name: "test_array_input_uint16_empty", want: "(val : Array[UInt16]) -> Unit!Error"},
		{name: "test_array_input_uint16_option", want: "(val : Array[UInt16?]) -> Unit!Error"},
		{name: "test_array_input_uint_empty", want: "(val : Array[UInt]) -> Unit!Error"},
		{name: "test_array_input_uint_option", want: "(val : Array[UInt?]) -> Unit!Error"},
		{name: "test_array_output_bool_0", want: "() -> Array[Bool]"},
		{name: "test_array_output_bool_1", want: "() -> Array[Bool]"},
		{name: "test_array_output_bool_2", want: "() -> Array[Bool]"},
		{name: "test_array_output_bool_3", want: "() -> Array[Bool]"},
		{name: "test_array_output_bool_4", want: "() -> Array[Bool]"},
		{name: "test_array_output_bool_option_0", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_1_false", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_1_none", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_1_true", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_2", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_3", want: "() -> Array[Bool?]"},
		{name: "test_array_output_bool_option_4", want: "() -> Array[Bool?]"},
		{name: "test_array_output_byte_0", want: "() -> Array[Byte]"},
		{name: "test_array_output_byte_1", want: "() -> Array[Byte]"},
		{name: "test_array_output_byte_2", want: "() -> Array[Byte]"},
		{name: "test_array_output_byte_3", want: "() -> Array[Byte]"},
		{name: "test_array_output_byte_4", want: "() -> Array[Byte]"},
		{name: "test_array_output_byte_option_0", want: "() -> Array[Byte?]"},
		{name: "test_array_output_byte_option_1", want: "() -> Array[Byte?]"},
		{name: "test_array_output_byte_option_2", want: "() -> Array[Byte?]"},
		{name: "test_array_output_byte_option_3", want: "() -> Array[Byte?]"},
		{name: "test_array_output_byte_option_4", want: "() -> Array[Byte?]"},
		{name: "test_array_output_char_0", want: "() -> Array[Char]"},
		{name: "test_array_output_char_1", want: "() -> Array[Char]"},
		{name: "test_array_output_char_2", want: "() -> Array[Char]"},
		{name: "test_array_output_char_3", want: "() -> Array[Char]"},
		{name: "test_array_output_char_4", want: "() -> Array[Char]"},
		{name: "test_array_output_char_option", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_0", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_1_none", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_1_some", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_2", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_3", want: "() -> Array[Char?]"},
		{name: "test_array_output_char_option_4", want: "() -> Array[Char?]"},
		{name: "test_array_output_double_0", want: "() -> Array[Double]"},
		{name: "test_array_output_double_1", want: "() -> Array[Double]"},
		{name: "test_array_output_double_2", want: "() -> Array[Double]"},
		{name: "test_array_output_double_3", want: "() -> Array[Double]"},
		{name: "test_array_output_double_4", want: "() -> Array[Double]"},
		{name: "test_array_output_double_option", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_0", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_1_none", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_1_some", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_2", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_3", want: "() -> Array[Double?]"},
		{name: "test_array_output_double_option_4", want: "() -> Array[Double?]"},
		{name: "test_array_output_float_0", want: "() -> Array[Float]"},
		{name: "test_array_output_float_1", want: "() -> Array[Float]"},
		{name: "test_array_output_float_2", want: "() -> Array[Float]"},
		{name: "test_array_output_float_3", want: "() -> Array[Float]"},
		{name: "test_array_output_float_4", want: "() -> Array[Float]"},
		{name: "test_array_output_float_option", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_0", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_1_none", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_1_some", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_2", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_3", want: "() -> Array[Float?]"},
		{name: "test_array_output_float_option_4", want: "() -> Array[Float?]"},
		{name: "test_array_output_int16_0", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_1", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_1_max", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_1_min", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_2", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_3", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_4", want: "() -> Array[Int16]"},
		{name: "test_array_output_int16_option", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_0", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_1_max", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_1_min", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_1_none", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_2", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_3", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int16_option_4", want: "() -> Array[Int16?]"},
		{name: "test_array_output_int64_0", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_1", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_1_max", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_1_min", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_2", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_3", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_4", want: "() -> Array[Int64]"},
		{name: "test_array_output_int64_option_0", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_1_max", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_1_min", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_1_none", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_2", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_3", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int64_option_4", want: "() -> Array[Int64?]"},
		{name: "test_array_output_int_0", want: "() -> Array[Int]"},
		{name: "test_array_output_int_1", want: "() -> Array[Int]"},
		{name: "test_array_output_int_1_max", want: "() -> Array[Int]"},
		{name: "test_array_output_int_1_min", want: "() -> Array[Int]"},
		{name: "test_array_output_int_2", want: "() -> Array[Int]"},
		{name: "test_array_output_int_3", want: "() -> Array[Int]"},
		{name: "test_array_output_int_4", want: "() -> Array[Int]"},
		{name: "test_array_output_int_option", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_0", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_1_max", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_1_min", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_1_none", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_2", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_3", want: "() -> Array[Int?]"},
		{name: "test_array_output_int_option_4", want: "() -> Array[Int?]"},
		{name: "test_array_output_string", want: "() -> Array[String]"},
		{name: "test_array_output_string_empty", want: "() -> Array[String]"},
		{name: "test_array_output_string_none", want: "() -> Array[String]?"},
		{name: "test_array_output_string_option", want: "() -> Array[String?]"},
		{name: "test_array_output_uint16_0", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_1", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_1_max", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_1_min", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_2", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_3", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_4", want: "() -> Array[UInt16]"},
		{name: "test_array_output_uint16_option", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_0", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_1_max", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_1_min", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_1_none", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_2", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_3", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint16_option_4", want: "() -> Array[UInt16?]"},
		{name: "test_array_output_uint64_0", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_1", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_1_max", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_1_min", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_2", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_3", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_4", want: "() -> Array[UInt64]"},
		{name: "test_array_output_uint64_option_0", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_1_max", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_1_min", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_1_none", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_2", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_3", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint64_option_4", want: "() -> Array[UInt64?]"},
		{name: "test_array_output_uint_0", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_1", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_1_max", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_1_min", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_2", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_3", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_4", want: "() -> Array[UInt]"},
		{name: "test_array_output_uint_option", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_0", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_1_max", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_1_min", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_1_none", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_2", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_3", want: "() -> Array[UInt?]"},
		{name: "test_array_output_uint_option_4", want: "() -> Array[UInt?]"},
		{name: "test_bool_input_false", want: "(b : Bool) -> Unit!Error"},
		{name: "test_bool_input_true", want: "(b : Bool) -> Unit!Error"},
		{name: "test_bool_option_input_false", want: "(b : Bool?) -> Unit!Error"},
		{name: "test_bool_option_input_none", want: "(b : Bool?) -> Unit!Error"},
		{name: "test_bool_option_input_true", want: "(b : Bool?) -> Unit!Error"},
		{name: "test_bool_option_output_false", want: "() -> Bool?"},
		{name: "test_bool_option_output_none", want: "() -> Bool?"},
		{name: "test_bool_option_output_true", want: "() -> Bool?"},
		{name: "test_bool_output_false", want: "() -> Bool"},
		{name: "test_bool_output_true", want: "() -> Bool"},
		{name: "test_byte_input_max", want: "(b : Byte) -> Unit!Error"},
		{name: "test_byte_input_min", want: "(b : Byte) -> Unit!Error"},
		{name: "test_byte_option_input_max", want: "(b : Byte?) -> Unit!Error"},
		{name: "test_byte_option_input_min", want: "(b : Byte?) -> Unit!Error"},
		{name: "test_byte_option_input_none", want: "(b : Byte?) -> Unit!Error"},
		{name: "test_byte_option_output_max", want: "() -> Byte?"},
		{name: "test_byte_option_output_min", want: "() -> Byte?"},
		{name: "test_byte_option_output_none", want: "() -> Byte?"},
		{name: "test_byte_output_max", want: "() -> Byte"},
		{name: "test_byte_output_min", want: "() -> Byte"},
		{name: "test_char_input_max", want: "(c : Char) -> Unit!Error"},
		{name: "test_char_input_min", want: "(c : Char) -> Unit!Error"},
		{name: "test_char_option_input_max", want: "(c : Char?) -> Unit!Error"},
		{name: "test_char_option_input_min", want: "(c : Char?) -> Unit!Error"},
		{name: "test_char_option_input_none", want: "(c : Char?) -> Unit!Error"},
		{name: "test_char_option_output_max", want: "() -> Char?"},
		{name: "test_char_option_output_min", want: "() -> Char?"},
		{name: "test_char_option_output_none", want: "() -> Char?"},
		{name: "test_char_output_max", want: "() -> Char"},
		{name: "test_char_output_min", want: "() -> Char"},
		{name: "test_double_input_max", want: "(n : Double) -> Unit!Error"},
		{name: "test_double_input_min", want: "(n : Double) -> Unit!Error"},
		{name: "test_double_option_input_max", want: "(n : Double?) -> Unit!Error"},
		{name: "test_double_option_input_min", want: "(n : Double?) -> Unit!Error"},
		{name: "test_double_option_input_none", want: "(n : Double?) -> Unit!Error"},
		{name: "test_double_option_output_max", want: "() -> Double?"},
		{name: "test_double_option_output_min", want: "() -> Double?"},
		{name: "test_double_option_output_none", want: "() -> Double?"},
		{name: "test_double_output_max", want: "() -> Double"},
		{name: "test_double_output_min", want: "() -> Double"},
		{name: "test_duration_input", want: "(d : @time.Duration) -> Unit!Error"},
		{name: "test_duration_option_input", want: "(d : @time.Duration?) -> Unit!Error"},
		{name: "test_duration_option_input_none", want: "(d : @time.Duration?) -> Unit!Error"},
		{name: "test_duration_option_input_none_style2", want: "(d? : @time.Duration) -> Unit!Error"},
		{name: "test_duration_option_input_style2", want: "(d? : @time.Duration) -> Unit!Error"},
		{name: "test_duration_option_output", want: "() -> @time.Duration?"},
		{name: "test_duration_option_output_none", want: "() -> @time.Duration?"},
		{name: "test_duration_output", want: "() -> @time.Duration"},
		{name: "test_fixedarray_input0_byte", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input0_int_option", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input0_string", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input0_string_option", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input1_byte", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input1_int_option", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input1_string", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input1_string_option", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input2_byte", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input2_int_option", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input2_map", want: "(val : FixedArray[Map[String, String]]) -> Unit!Error"},
		{name: "test_fixedarray_input2_map_option", want: "(val : FixedArray[Map[String, String]?]) -> Unit!Error"},
		{name: "test_fixedarray_input2_string", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input2_string_option", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input2_struct", want: "(val : FixedArray[TestStruct2]) -> Unit!Error"},
		{name: "test_fixedarray_input2_struct_option", want: "(val : FixedArray[TestStruct2?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_0", want: "(val : FixedArray[Bool]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_1", want: "(val : FixedArray[Bool]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_2", want: "(val : FixedArray[Bool]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_3", want: "(val : FixedArray[Bool]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_4", want: "(val : FixedArray[Bool]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_0", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_1_false", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_1_none", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_1_true", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_2", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_3", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_bool_option_4", want: "(val : FixedArray[Bool?]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_0", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_1", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_2", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_3", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_4", want: "(val : FixedArray[Byte]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_option_0", want: "(val : FixedArray[Byte?]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_option_1", want: "(val : FixedArray[Byte?]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_option_2", want: "(val : FixedArray[Byte?]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_option_3", want: "(val : FixedArray[Byte?]) -> Unit!Error"},
		{name: "test_fixedarray_input_byte_option_4", want: "(val : FixedArray[Byte?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_0", want: "(val : FixedArray[Char]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_1", want: "(val : FixedArray[Char]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_2", want: "(val : FixedArray[Char]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_3", want: "(val : FixedArray[Char]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_4", want: "(val : FixedArray[Char]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_0", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_1_none", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_1_some", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_2", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_3", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_char_option_4", want: "(val : FixedArray[Char?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_0", want: "(val : FixedArray[Double]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_1", want: "(val : FixedArray[Double]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_2", want: "(val : FixedArray[Double]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_3", want: "(val : FixedArray[Double]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_4", want: "(val : FixedArray[Double]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_0", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_1_none", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_1_some", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_2", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_3", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_double_option_4", want: "(val : FixedArray[Double?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_0", want: "(val : FixedArray[Float]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_1", want: "(val : FixedArray[Float]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_2", want: "(val : FixedArray[Float]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_3", want: "(val : FixedArray[Float]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_4", want: "(val : FixedArray[Float]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_0", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_1_none", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_1_some", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_2", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_3", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_float_option_4", want: "(val : FixedArray[Float?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_0", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_1", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_1_max", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_1_min", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_2", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_3", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_4", want: "(val : FixedArray[Int16]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_0", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_1_max", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_1_min", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_1_none", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_2", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_3", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int16_option_4", want: "(val : FixedArray[Int16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_0", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_1", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_1_max", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_1_min", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_2", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_3", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_4", want: "(val : FixedArray[Int64]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_0", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_1_max", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_1_min", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_1_none", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_2", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_3", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int64_option_4", want: "(val : FixedArray[Int64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_0", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_1", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_1_max", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_1_min", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_2", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_3", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_4", want: "(val : FixedArray[Int]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_0", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_1_max", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_1_min", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_1_none", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_2", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_3", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_int_option_4", want: "(val : FixedArray[Int?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_0", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_1", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_2", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_3", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_4", want: "(val : FixedArray[String]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_0", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_1_none", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_1_some", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_2", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_3", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_string_option_4", want: "(val : FixedArray[String?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_0", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_1", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_1_max", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_1_min", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_2", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_3", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_4", want: "(val : FixedArray[UInt16]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_0", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_1_max", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_1_min", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_1_none", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_2", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_3", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint16_option_4", want: "(val : FixedArray[UInt16?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_0", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_1", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_1_max", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_1_min", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_2", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_3", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_4", want: "(val : FixedArray[UInt64]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_0", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_1_max", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_1_min", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_1_none", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_2", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_3", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint64_option_4", want: "(val : FixedArray[UInt64?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_0", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_1", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_1_max", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_1_min", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_2", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_3", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_4", want: "(val : FixedArray[UInt]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_0", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_1_max", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_1_min", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_1_none", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_2", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_3", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_input_uint_option_4", want: "(val : FixedArray[UInt?]) -> Unit!Error"},
		{name: "test_fixedarray_output0_byte", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output0_int_option", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output0_string", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output0_string_option", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output1_byte", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output1_int_option", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output1_string", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output1_string_option", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output2_byte", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output2_int_option", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output2_map", want: "() -> FixedArray[Map[String, String]]"},
		{name: "test_fixedarray_output2_map_option", want: "() -> FixedArray[Map[String, String]?]"},
		{name: "test_fixedarray_output2_string", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output2_string_option", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output2_struct", want: "() -> FixedArray[TestStruct2]"},
		{name: "test_fixedarray_output2_struct_option", want: "() -> FixedArray[TestStruct2?]"},
		{name: "test_fixedarray_output_bool_0", want: "() -> FixedArray[Bool]"},
		{name: "test_fixedarray_output_bool_1", want: "() -> FixedArray[Bool]"},
		{name: "test_fixedarray_output_bool_2", want: "() -> FixedArray[Bool]"},
		{name: "test_fixedarray_output_bool_3", want: "() -> FixedArray[Bool]"},
		{name: "test_fixedarray_output_bool_4", want: "() -> FixedArray[Bool]"},
		{name: "test_fixedarray_output_bool_option_0", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_1_false", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_1_none", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_1_true", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_2", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_3", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_bool_option_4", want: "() -> FixedArray[Bool?]"},
		{name: "test_fixedarray_output_byte_0", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output_byte_1", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output_byte_2", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output_byte_3", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output_byte_4", want: "() -> FixedArray[Byte]"},
		{name: "test_fixedarray_output_byte_option_0", want: "() -> FixedArray[Byte?]"},
		{name: "test_fixedarray_output_byte_option_1", want: "() -> FixedArray[Byte?]"},
		{name: "test_fixedarray_output_byte_option_2", want: "() -> FixedArray[Byte?]"},
		{name: "test_fixedarray_output_byte_option_3", want: "() -> FixedArray[Byte?]"},
		{name: "test_fixedarray_output_byte_option_4", want: "() -> FixedArray[Byte?]"},
		{name: "test_fixedarray_output_char_0", want: "() -> FixedArray[Char]"},
		{name: "test_fixedarray_output_char_1", want: "() -> FixedArray[Char]"},
		{name: "test_fixedarray_output_char_2", want: "() -> FixedArray[Char]"},
		{name: "test_fixedarray_output_char_3", want: "() -> FixedArray[Char]"},
		{name: "test_fixedarray_output_char_4", want: "() -> FixedArray[Char]"},
		{name: "test_fixedarray_output_char_option_0", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_char_option_1_none", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_char_option_1_some", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_char_option_2", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_char_option_3", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_char_option_4", want: "() -> FixedArray[Char?]"},
		{name: "test_fixedarray_output_double_0", want: "() -> FixedArray[Double]"},
		{name: "test_fixedarray_output_double_1", want: "() -> FixedArray[Double]"},
		{name: "test_fixedarray_output_double_2", want: "() -> FixedArray[Double]"},
		{name: "test_fixedarray_output_double_3", want: "() -> FixedArray[Double]"},
		{name: "test_fixedarray_output_double_4", want: "() -> FixedArray[Double]"},
		{name: "test_fixedarray_output_double_option_0", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_double_option_1_none", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_double_option_1_some", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_double_option_2", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_double_option_3", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_double_option_4", want: "() -> FixedArray[Double?]"},
		{name: "test_fixedarray_output_float_0", want: "() -> FixedArray[Float]"},
		{name: "test_fixedarray_output_float_1", want: "() -> FixedArray[Float]"},
		{name: "test_fixedarray_output_float_2", want: "() -> FixedArray[Float]"},
		{name: "test_fixedarray_output_float_3", want: "() -> FixedArray[Float]"},
		{name: "test_fixedarray_output_float_4", want: "() -> FixedArray[Float]"},
		{name: "test_fixedarray_output_float_option_0", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_float_option_1_none", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_float_option_1_some", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_float_option_2", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_float_option_3", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_float_option_4", want: "() -> FixedArray[Float?]"},
		{name: "test_fixedarray_output_int16_0", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_1", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_1_max", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_1_min", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_2", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_3", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_4", want: "() -> FixedArray[Int16]"},
		{name: "test_fixedarray_output_int16_option_0", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_1_max", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_1_min", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_1_none", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_2", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_3", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int16_option_4", want: "() -> FixedArray[Int16?]"},
		{name: "test_fixedarray_output_int64_0", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_1", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_1_max", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_1_min", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_2", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_3", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_4", want: "() -> FixedArray[Int64]"},
		{name: "test_fixedarray_output_int64_option_0", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_1_max", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_1_min", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_1_none", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_2", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_3", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int64_option_4", want: "() -> FixedArray[Int64?]"},
		{name: "test_fixedarray_output_int_0", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_1", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_1_max", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_1_min", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_2", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_3", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_4", want: "() -> FixedArray[Int]"},
		{name: "test_fixedarray_output_int_option_0", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_1_max", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_1_min", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_1_none", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_2", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_3", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_int_option_4", want: "() -> FixedArray[Int?]"},
		{name: "test_fixedarray_output_string_0", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output_string_1", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output_string_2", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output_string_3", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output_string_4", want: "() -> FixedArray[String]"},
		{name: "test_fixedarray_output_string_option_0", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_string_option_1_none", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_string_option_1_some", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_string_option_2", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_string_option_3", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_string_option_4", want: "() -> FixedArray[String?]"},
		{name: "test_fixedarray_output_uint16_0", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_1", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_1_max", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_1_min", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_2", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_3", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_4", want: "() -> FixedArray[UInt16]"},
		{name: "test_fixedarray_output_uint16_option_0", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_1_max", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_1_min", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_1_none", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_2", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_3", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint16_option_4", want: "() -> FixedArray[UInt16?]"},
		{name: "test_fixedarray_output_uint64_0", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_1", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_1_max", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_1_min", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_2", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_3", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_4", want: "() -> FixedArray[UInt64]"},
		{name: "test_fixedarray_output_uint64_option_0", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_1_max", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_1_min", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_1_none", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_2", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_3", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint64_option_4", want: "() -> FixedArray[UInt64?]"},
		{name: "test_fixedarray_output_uint_0", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_1", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_1_max", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_1_min", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_2", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_3", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_4", want: "() -> FixedArray[UInt]"},
		{name: "test_fixedarray_output_uint_option_0", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_1_max", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_1_min", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_1_none", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_2", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_3", want: "() -> FixedArray[UInt?]"},
		{name: "test_fixedarray_output_uint_option_4", want: "() -> FixedArray[UInt?]"},
		{name: "test_float_input_max", want: "(n : Float) -> Unit!Error"},
		{name: "test_float_input_min", want: "(n : Float) -> Unit!Error"},
		{name: "test_float_option_input_max", want: "(n : Float?) -> Unit!Error"},
		{name: "test_float_option_input_min", want: "(n : Float?) -> Unit!Error"},
		{name: "test_float_option_input_none", want: "(n : Float?) -> Unit!Error"},
		{name: "test_float_option_output_max", want: "() -> Float?"},
		{name: "test_float_option_output_min", want: "() -> Float?"},
		{name: "test_float_option_output_none", want: "() -> Float?"},
		{name: "test_float_output_max", want: "() -> Float"},
		{name: "test_float_output_min", want: "() -> Float"},
		{name: "test_generate_map_string_string_output", want: "() -> Map[String, String]"},
		{name: "test_http_header", want: "(h : HttpHeader?) -> Unit"},
		{name: "test_http_header_map", want: "(m : Map[String, HttpHeader?]) -> Unit"},
		{name: "test_http_headers", want: "(h : HttpHeaders) -> Unit"},
		{name: "test_http_response_headers", want: "(r : HttpResponse?) -> Unit"},
		{name: "test_int16_input_max", want: "(n : Int16) -> Unit!Error"},
		{name: "test_int16_input_min", want: "(n : Int16) -> Unit!Error"},
		{name: "test_int16_option_input_max", want: "(n : Int16?) -> Unit!Error"},
		{name: "test_int16_option_input_min", want: "(n : Int16?) -> Unit!Error"},
		{name: "test_int16_option_input_none", want: "(n : Int16?) -> Unit!Error"},
		{name: "test_int16_option_output_max", want: "() -> Int16?"},
		{name: "test_int16_option_output_min", want: "() -> Int16?"},
		{name: "test_int16_option_output_none", want: "() -> Int16?"},
		{name: "test_int16_output_max", want: "() -> Int16"},
		{name: "test_int16_output_min", want: "() -> Int16"},
		{name: "test_int64_input_max", want: "(n : Int64) -> Unit!Error"},
		{name: "test_int64_input_min", want: "(n : Int64) -> Unit!Error"},
		{name: "test_int64_option_input_max", want: "(n : Int64?) -> Unit!Error"},
		{name: "test_int64_option_input_min", want: "(n : Int64?) -> Unit!Error"},
		{name: "test_int64_option_input_none", want: "(n : Int64?) -> Unit!Error"},
		{name: "test_int64_option_output_max", want: "() -> Int64?"},
		{name: "test_int64_option_output_min", want: "() -> Int64?"},
		{name: "test_int64_option_output_none", want: "() -> Int64?"},
		{name: "test_int64_output_max", want: "() -> Int64"},
		{name: "test_int64_output_min", want: "() -> Int64"},
		{name: "test_int_input_max", want: "(n : Int) -> Unit!Error"},
		{name: "test_int_input_min", want: "(n : Int) -> Unit!Error"},
		{name: "test_int_option_input_max", want: "(n : Int?) -> Unit!Error"},
		{name: "test_int_option_input_min", want: "(n : Int?) -> Unit!Error"},
		{name: "test_int_option_input_none", want: "(n : Int?) -> Unit!Error"},
		{name: "test_int_option_output_max", want: "() -> Int?"},
		{name: "test_int_option_output_min", want: "() -> Int?"},
		{name: "test_int_option_output_none", want: "() -> Int?"},
		{name: "test_int_output_max", want: "() -> Int"},
		{name: "test_int_output_min", want: "() -> Int"},
		{name: "test_iterate_map_string_string", want: "(m : Map[String, String]) -> Unit"},
		{name: "test_map_input_int_double", want: "(m : Map[Int, Double]) -> Unit!Error"},
		{name: "test_map_input_int_float", want: "(m : Map[Int, Float]) -> Unit!Error"},
		{name: "test_map_input_string_string", want: "(m : Map[String, String]) -> Unit!Error"},
		{name: "test_map_lookup_string_string", want: "(m : Map[String, String], key : String) -> String"},
		{name: "test_map_option_input_string_string", want: "(m : Map[String, String]?) -> Unit!Error"},
		{name: "test_map_option_output_string_string", want: "() -> Map[String, String]?"},
		{name: "test_map_output_int_double", want: "() -> Map[Int, Double]"},
		{name: "test_map_output_int_float", want: "() -> Map[Int, Float]"},
		{name: "test_map_output_string_string", want: "() -> Map[String, String]"},
		{name: "test_option_fixedarray_input1_int", want: "(val : FixedArray[Int]?) -> Unit!Error"},
		{name: "test_option_fixedarray_input1_string", want: "(val : FixedArray[String]?) -> Unit!Error"},
		{name: "test_option_fixedarray_input2_int", want: "(val : FixedArray[Int]?) -> Unit!Error"},
		{name: "test_option_fixedarray_input2_string", want: "(val : FixedArray[String]?) -> Unit!Error"},
		{name: "test_option_fixedarray_output1_int", want: "() -> FixedArray[Int]?"},
		{name: "test_option_fixedarray_output1_string", want: "() -> FixedArray[String]?"},
		{name: "test_option_fixedarray_output2_int", want: "() -> FixedArray[Int]?"},
		{name: "test_option_fixedarray_output2_string", want: "() -> FixedArray[String]?"},
		{name: "test_recursive_struct_input", want: "(o : TestRecursiveStruct) -> Unit!Error"},
		{name: "test_recursive_struct_option_input", want: "(o : TestRecursiveStruct?) -> Unit!Error"},
		{name: "test_recursive_struct_option_input_none", want: "(o : TestRecursiveStruct?) -> Unit!Error"},
		{name: "test_recursive_struct_option_output", want: "() -> TestRecursiveStruct?"},
		{name: "test_recursive_struct_option_output_map", want: "() -> TestRecursiveStruct_map?"},
		{name: "test_recursive_struct_option_output_none", want: "() -> TestRecursiveStruct?"},
		{name: "test_recursive_struct_output", want: "() -> TestRecursiveStruct"},
		{name: "test_recursive_struct_output_map", want: "() -> TestRecursiveStruct_map"},
		{name: "test_string_input", want: "(s : String) -> Unit!Error"},
		{name: "test_string_option_input", want: "(s : String?) -> Unit!Error"},
		{name: "test_string_option_input_none", want: "(s : String?) -> Unit!Error"},
		{name: "test_string_option_output", want: "() -> String?"},
		{name: "test_string_option_output_none", want: "() -> String?"},
		{name: "test_string_output", want: "() -> String"},
		{name: "test_struct_containing_map_input_string_string", want: "(s : TestStructWithMap) -> Unit!Error"},
		{name: "test_struct_containing_map_output_string_string", want: "() -> TestStructWithMap"},
		{name: "test_struct_input1", want: "(o : TestStruct1) -> Unit!Error"},
		{name: "test_struct_input2", want: "(o : TestStruct2) -> Unit!Error"},
		{name: "test_struct_input3", want: "(o : TestStruct3) -> Unit!Error"},
		{name: "test_struct_input4", want: "(o : TestStruct4) -> Unit!Error"},
		{name: "test_struct_input4_with_none", want: "(o : TestStruct4) -> Unit!Error"},
		{name: "test_struct_input5", want: "(o : TestStruct5) -> Unit!Error"},
		{name: "test_struct_option_input1", want: "(o : TestStruct1?) -> Unit!Error"},
		{name: "test_struct_option_input1_none", want: "(o : TestStruct1?) -> Unit!Error"},
		{name: "test_struct_option_input2", want: "(o : TestStruct2?) -> Unit!Error"},
		{name: "test_struct_option_input2_none", want: "(o : TestStruct2?) -> Unit!Error"},
		{name: "test_struct_option_input3", want: "(o : TestStruct3?) -> Unit!Error"},
		{name: "test_struct_option_input3_none", want: "(o : TestStruct3?) -> Unit!Error"},
		{name: "test_struct_option_input4", want: "(o : TestStruct4?) -> Unit!Error"},
		{name: "test_struct_option_input4_none", want: "(o : TestStruct4?) -> Unit!Error"},
		{name: "test_struct_option_input4_with_none", want: "(o : TestStruct4?) -> Unit!Error"},
		{name: "test_struct_option_input5", want: "(o : TestStruct5?) -> Unit!Error"},
		{name: "test_struct_option_input5_none", want: "(o : TestStruct5?) -> Unit!Error"},
		{name: "test_struct_option_output1", want: "() -> TestStruct1?"},
		{name: "test_struct_option_output1_map", want: "() -> TestStruct1_map?"},
		{name: "test_struct_option_output1_none", want: "() -> TestStruct1?"},
		{name: "test_struct_option_output2", want: "() -> TestStruct2?"},
		{name: "test_struct_option_output2_map", want: "() -> TestStruct2_map?"},
		{name: "test_struct_option_output2_none", want: "() -> TestStruct2?"},
		{name: "test_struct_option_output3", want: "() -> TestStruct3?"},
		{name: "test_struct_option_output3_map", want: "() -> TestStruct3_map?"},
		{name: "test_struct_option_output3_none", want: "() -> TestStruct3?"},
		{name: "test_struct_option_output4", want: "() -> TestStruct4?"},
		{name: "test_struct_option_output4_map", want: "() -> TestStruct4_map?"},
		{name: "test_struct_option_output4_map_with_none", want: "() -> TestStruct4_map?"},
		{name: "test_struct_option_output4_none", want: "() -> TestStruct4?"},
		{name: "test_struct_option_output4_with_none", want: "() -> TestStruct4?"},
		{name: "test_struct_option_output5", want: "() -> TestStruct5?"},
		{name: "test_struct_option_output5_map", want: "() -> TestStruct5_map?"},
		{name: "test_struct_option_output5_none", want: "() -> TestStruct5?"},
		{name: "test_struct_output1", want: "() -> TestStruct1"},
		{name: "test_struct_output1_map", want: "() -> TestStruct1_map"},
		{name: "test_struct_output2", want: "() -> TestStruct2"},
		{name: "test_struct_output2_map", want: "() -> TestStruct2_map"},
		{name: "test_struct_output3", want: "() -> TestStruct3"},
		{name: "test_struct_output3_map", want: "() -> TestStruct3_map"},
		{name: "test_struct_output4", want: "() -> TestStruct4"},
		{name: "test_struct_output4_map", want: "() -> TestStruct4_map"},
		{name: "test_struct_output4_map_with_none", want: "() -> TestStruct4_map"},
		{name: "test_struct_output4_with_none", want: "() -> TestStruct4"},
		{name: "test_struct_output5", want: "() -> TestStruct5"},
		{name: "test_struct_output5_map", want: "() -> TestStruct5_map"},
		{name: "test_time_input", want: "(t : @time.ZonedDateTime) -> Unit!Error"},
		{name: "test_time_option_input", want: "(t : @time.ZonedDateTime?) -> Unit!Error"},
		{name: "test_time_option_input_none", want: "(t : @time.ZonedDateTime?) -> Unit!Error"},
		{name: "test_time_option_input_none_style2", want: "(t? : @time.ZonedDateTime) -> Unit!Error"},
		{name: "test_time_option_input_style2", want: "(t? : @time.ZonedDateTime) -> Unit!Error"},
		{name: "test_time_option_output", want: "() -> @time.ZonedDateTime?"},
		{name: "test_time_option_output_none", want: "() -> @time.ZonedDateTime?"},
		{name: "test_time_output", want: "() -> @time.ZonedDateTime"},
		{name: "test_tuple_output", want: "() -> (Int, Bool, String)"},
		{name: "test_uint16_input_max", want: "(n : UInt16) -> Unit!Error"},
		{name: "test_uint16_input_min", want: "(n : UInt16) -> Unit!Error"},
		{name: "test_uint16_option_input_max", want: "(n : UInt16?) -> Unit!Error"},
		{name: "test_uint16_option_input_min", want: "(n : UInt16?) -> Unit!Error"},
		{name: "test_uint16_option_input_none", want: "(n : UInt16?) -> Unit!Error"},
		{name: "test_uint16_option_output_max", want: "() -> UInt16?"},
		{name: "test_uint16_option_output_min", want: "() -> UInt16?"},
		{name: "test_uint16_option_output_none", want: "() -> UInt16?"},
		{name: "test_uint16_output_max", want: "() -> UInt16"},
		{name: "test_uint16_output_min", want: "() -> UInt16"},
		{name: "test_uint64_input_max", want: "(n : UInt64) -> Unit!Error"},
		{name: "test_uint64_input_min", want: "(n : UInt64) -> Unit!Error"},
		{name: "test_uint64_option_input_max", want: "(n : UInt64?) -> Unit!Error"},
		{name: "test_uint64_option_input_min", want: "(n : UInt64?) -> Unit!Error"},
		{name: "test_uint64_option_input_none", want: "(n : UInt64?) -> Unit!Error"},
		{name: "test_uint64_option_output_max", want: "() -> UInt64?"},
		{name: "test_uint64_option_output_min", want: "() -> UInt64?"},
		{name: "test_uint64_option_output_none", want: "() -> UInt64?"},
		{name: "test_uint64_output_max", want: "() -> UInt64"},
		{name: "test_uint64_output_min", want: "() -> UInt64"},
		{name: "test_uint_input_max", want: "(n : UInt) -> Unit!Error"},
		{name: "test_uint_input_min", want: "(n : UInt) -> Unit!Error"},
		{name: "test_uint_option_input_max", want: "(n : UInt?) -> Unit!Error"},
		{name: "test_uint_option_input_min", want: "(n : UInt?) -> Unit!Error"},
		{name: "test_uint_option_input_none", want: "(n : UInt?) -> Unit!Error"},
		{name: "test_uint_option_output_max", want: "() -> UInt?"},
		{name: "test_uint_option_output_min", want: "() -> UInt?"},
		{name: "test_uint_option_output_none", want: "() -> UInt?"},
		{name: "test_uint_output_max", want: "() -> UInt"},
		{name: "test_uint_output_min", want: "() -> UInt"},
	}

	testFunctionStringHelper(t, "runtime", runtimeTestdataMetadataJSON, tests)
}
